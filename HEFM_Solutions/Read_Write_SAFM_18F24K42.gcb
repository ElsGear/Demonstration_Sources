'''A test program of the SAFsaf.h library routines
'''-----------------------------------------------------------------------------
'''This is using the SAF/saf routines to read/write data or strings
'''to SAF or SAF memory. The SAF Memory Block is then dumped to a serial terminal
'''Be sure to use one of the chip listed in SAFsaf.h init routine which
'''have an UART module.  This is a revised demonstation to support the latest library.
'''
'''@author  William Roth and the works Evan Venn & Jacques Nilo
'''@licence GPL
'''@version 2.0
'''@date    09.11.2018
'''
'''*****************************************************************************

''' There are several system Constants available for use with SAF. These are:
'''
'''   SAF_BYTES                 The number of Bytes of SAF Memory
'''   SAF_ROWSIZE_BYTES         The number of Bytes in a Block of SAFM
'''   SAF_NUM_BLOCKS            The number blocks of SAFM  (Either 2 or 4)
'''   SAF_START_ADDRESS         The Absolute Address of the Start of SAFM
'''   SAF_BLOCK0_ADDR           The Absolute Address of the Start of SAF Block 0
'''   SAF_BLOCK1_ADDR           The Absolute Address of the Start of SAF Block 1
'''   SAF_BLOCK2_ADDR           The Absolute Address of the Start of SAF Block 2
'''   SAF_BLOCK3_ADDR           The Absolute Address of the Start of SAF Block 3
'''
'''  The most useful of these is  SAF_ROWSIZE_BYTES.  This constant should be
'''  used to size the necessary buffer array used with SAF commands
'''
'''      Example:  Dim MyBufffer(SAF_ROWSIZE_BYTES)
'''
'''  Sometimes it may be necessary to know the SAF block  and offset where
'''  a relative address resides. This can be calculated as follows:
'''
'''      Block number = relative address / SAF_ROWSIZE_BYTES
'''
'''      offset =  relative address % SAF_ROWSIZE_BYTES
'''
'''     Example:
'''
'''    Relative address = 184
'''
'''    Blocknum = 184 /  64  =  2   (integer math)
'''    offset =   184 %  64  =  56  (Modulo divide)
'''
'''   So a byte of data stored in rel address 184 is
'''   located in the 56th  location of block 2

 'Chip Settings.
 #chip 18F25K42, 16
 #option Explicit

 #startup InitPPS, 85
 #define PPSToolPart 18F25K42

  'Setup Serial port
  #define USART_BAUD_RATE 19200
  #define USART_TX_BLOCKING

  Dim Rel_Address, numbytes, DataByte, Index as Byte
  Dim NVM_Address as Long  ' Absolute Address
  Dim  DataWord as Word
  Dim MyBuffer(SAF_ROWSIZE_BYTES)

  Wait 200 ms 'Stabilize

' ------- Main Program Starts Here --------------

 ''' Store 8 Bytes of Data in SAF Memory using SAFWriteBlock
 ''' MyBuffer is sized using the system constant SAF_ROWSIZE_BYTES
 '''------------------------------------------------------------------


  'Write  8 Bytes of data into the buffer/array
  MyBuffer = 32, 44, 88, 91, 78, 31, 63, 99

  'Write the 8 bytes to SAF Block 0
   numbytes = 8
   SAFWriteBlock (0, MyBuffer,numbytes)

  ' *** Read the 8 stored bytes using SAFReadBlock ***
    SAFReadBlock (0, MyBuffer, numbytes)

   'Output the 8 bytes to a terminal
    HSerPrintCRLF 2
    For index = 1 to numbytes
        Hserprint MyBuffer(index)
        Hsersend 32 'space
    Next

   ' *** Read the stored bytes using SAFRead ***
   ' The relative memory address or location is
   ' offset by 1 relative to the buffer address

    HserprintCRLF 2
    For rel_address = 0 to 7
        SAFRead (Rel_Address, Databyte)
        Hserprint DataByte
        hsersend 32 'space
    Next
'=========================================================

 ''' Store 4 Words  of Data in SAF Memory using SAFWrite
 '''------------------------------------------------------
  Dim Word1, Word2, Word3, Word4 as Word
  Word1 = 23471
  Word2 = 496
  Word3 = 53873
  Word4 = 65535

  'Write the words staring at saf location 8
  'Which is the next address past the 8 bytes
  SAFwriteWord (8, Word1)   ' use even numbered adresses
  SAFwriteWord (10, Word2)
  SAFwriteWord (12, Word3)
  SAFwriteWord (14, Word4)

  'Read the Words using SAFReadWord & output to terminal
  Rel_Address = 8
  HserprintCRLF 2
  Repeat 4
      SAFReadWord(Rel_Address, DataWord)
      HSerprint DataWord
      Hsersend 32
      Rel_Address +=2  'increment address by 2
  End repeat
  HSerprintCRLF 2
  SAFM_DUMP

'=========================================================
  end



'
'; This subroutine displays the SAF Flash Memory on a terminal
'; Words in reverse byte order relative to address
sub SAFM_Dump

    Dim Blocknum as Byte
    NVM_Address  = SAF_START_ADDR
    BlockNum = 0

    Repeat SAF_WORDS    ;128 times
        If NVM_Address % SAF_ROWSIZE_BYTES = 0 then
           If BlockNum > 0 then   HSERPRINTCRLF
           HSerprintCRLF

           HserPrint "Block"
           HSerprint BlockNum
           HSerprint "  1 0   3 2   5 4   7 6   9 8   B A   D C   F E"
           BlockNum++
        End if

        IF NVM_Address  % 16 = 0 then
           HSerPrintCRLF
           hserprint hex(NVM_Address_H)
           hserprint hex(NVM_Address)
           hserprint "    "
        end if

        Rel_Address = NVM_ADDRESS - SAF_START_ADDR
        SAFReadWord(Rel_Address,DataWord)

        hserprint hex(DataWord_H)
        hserprint hex(DataWord)
        hserprint "  "

        NVM_Address+=2 ' Next "WORD"
    End Repeat

 HserPrintCRLF

End sub

 Sub InitPPS
          'Module: UART pin directions
          Dir PORTC.6 Out    ' Make TX Pin an Output
          'Module: UART1
          RC6PPS = 0x0013    'TX1 > RC6
 End Sub
