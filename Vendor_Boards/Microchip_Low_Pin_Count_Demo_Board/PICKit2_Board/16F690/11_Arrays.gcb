'''
'''******************************************************************
''' Lesson 11 - "Arrays"
'''
''' This lesson covers a very important topic of Arrays. The code uses indirect
''' addressing to implement a moving average filter. This lesson adds a moving average
''' filter to the Analog-to-Digital code in Lesson 4. The moving average keeps a list of the
''' last ADC values (n) and averages them together. The filter needs two parts: A circular
''' queue and a function to calculate the average.
'''
''' Twisting the potentiometer changes the value read by the Analog-to-Digital converter.
''' The filtered value is then sent to the LED display.
'''
''' This lesson provides the same outcome as Lesson 4. The user rotates the POT to see
''' the LEDs rotate. The top four MSbs of the ADC value are reflected onto the LEDs.
'''
'''
'''
'''  PIC: 16F690
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: PICkit 2 Low Pin Count Demo Board
'''  Date: 28.3.2019
'''
''''''******************************************************************
''' See Low Pin Count Demo Board User's Guide for Lesson Information*
''''''*****************************************************************
'''



#CHIP 16f690

'' -------------------LATC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' LED:   ---------------|DS4|DS3|DS2|DS1|-
''-----------------------------------------
''

#DEFINE NUM_READINGS 8

Dim _sum As Long
Dim yloop, xloop As Byte
_sum = 0

Dim queue(8)
queue = 0, 0, 0, 0, 0, 0, 0, 0

Dir portc Out

Do
    For xloop = 1 To NUM_READINGS
        ' calcualtion to ensure max value 15, equates to all 4 LEDS on
        portc = ( average_reading ( queue() ) * 10 / 138 )

        queue( xloop ) = ReadAD ( AN0 )
    Next
Loop


Function average_reading ( In analyze_queue() ) As Word

    _sum = 0
    For yloop = 1 To  NUM_READINGS
        _sum = [Long]queue ( yloop ) + _sum
    Next

    average_reading = _sum / NUM_READINGS

End Function
