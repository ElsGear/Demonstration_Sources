'''
'''******************************************************************
''' Lesson 8 - "PWM"
'''
''' Pulse-Width Modulation (PWM) is a scheme that provides power to a load by switching
''' quickly between fully on and fully off states. The PWM signal resembles a square wave
''' where the high portion of the signal is considered the on state and the low portion of
''' the signal is considered the off state. The high portion, also known as the pulse width,
''' can vary in time and is defined in steps. A longer, high on time will illuminate the LED
''' brighter. The frequency or period of the PWM does not change. A larger number of
''' steps applied, which lengthens the pulse width, also supplies more power to the load.
''' Lowering the number of steps applied, which shortens the pulse width, supplies less
''' power. The PWM period is defined as the duration of one complete cycle or the total
''' amount of on and off time combined.
'''
''' Demo1.  Rotating the POT will adjust the brightness of a single CCP port.
''' Demo2.  Shows a how the changing PWM values across four CCP ports
'''
''' As CCP1 is connect to portc.x you have two choices....
''' 1. Connect the output of CCPx to the output of any of the existing LEDs ports, such as portc.0, portc.1, portc.2 or portc.3
''' 2. Or, connect an LED via a suitable resistor to portc.x then to 0v.  Like MCU portc.x ---> resistor 1kOhmns ----> Ov
'''
'''  PIC: 16F1829
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: PICkit 2 Low Pin Count Demo Board
'''  Date: 10.4.2015
'''
''''''******************************************************************
''' See Low Pin Count Demo Board User's Guide for Lesson Information*
''''''*****************************************************************
'''

''' As CCP1 is connect to portc.x you have two choices....
''' 1. Connect the output of CCPx to the output of any of the existing LEDs ports, such as portc.0, portc.1, portc.2 or portc.3
''' 2. Or, connect an LED via a suitable resistor to portc.x then to 0v.  Like MCU portc.x ---> resistor 1kOhmns ----> Ov
'''

#CHIP 16f1829,8





#DEFINE demo1
' #define demo2

'' -------------------LATC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' LED:   ---------------|DS4|DS3|DS2|DS1|-
''-----------------------------------------
''

#SCRIPT
    'This script provides PWM results!

    'reference voltage                        5v
    'actual voltage at port when 100% Pot     4.15
    'adc max                                  1023
    'number of graduations requried           255
    reference_voltage = 4.15
    vcc = 5
    numberofgrads = 255
    maxADC = 1023
    ADC_adjustment = int((reference_voltage*100)/(vcc*10))
    ADC_adjustment = int(ADC_adjustment * maxADC / numberofgrads )

#ENDSCRIPT

#IFDEF demo1
    Dir portc Out
    Dir portc.3 Out
    Dim calculatedPWM As Word

    Do
        Wait 5 ms
        calculatedPWM = ( ( ReadAD10 ( AN0 ) * 10  ) / ADC_adjustment   )
        If calculatedPWM > 255 Then calculatedPWM = 255
        HPWM 2, 40, calculatedPWM
    Loop

#ENDIF

''' As CCP1 is connect to portc.x you have two choices....
''' 1. Connect the output of CCPx to the output of any of the existing LEDs ports, such as portc.0, portc.1, portc.2 or portc.3
''' 2. Or, connect an LED via a suitable resistor to portc.x then to 0v.  Like MCU portc.x ---> resistor 1kOhmns ----> Ov
'''

#IFDEF demo2
    ' CCP1
    Dir portc.5 Out
    ' CCP2
    Dir portc.3 Out
    ' CCP3
    Dir porta.2 Out
    ' CCP4
    Dir portc.6 Out

    Do Forever
        For Bright = 1 To 255
            HPWM 3, 40, Bright
            HPWM 2, 40, Bright
            HPWM 1, 40, Bright
            HPWM 4, 40, Bright
            Wait 10 ms
        Next

    Loop
#ENDIF
